from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.common.exceptions import TimeoutException, NoSuchElementException, StaleElementReferenceException
import time
from app.models import Course


class CourseParser:
    def __init__(self, headless=True):
        self.headless = headless
        self.driver = None

    def __enter__(self):
        self.setup_driver()
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.close_driver()

    def setup_driver(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥—Ä–∞–π–≤–µ—Ä–∞"""
        chrome_options = Options()
        if self.headless:
            chrome_options.add_argument('--headless')
        chrome_options.add_argument('--no-sandbox')
        chrome_options.add_argument('--disable-dev-shm-usage')
        chrome_options.add_argument('--disable-gpu')
        chrome_options.add_argument('--window-size=1920,1080')
        chrome_options.add_argument(
            '--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')

        self.driver = webdriver.Chrome(options=chrome_options)
        self.driver.implicitly_wait(10)

    def close_driver(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞"""
        if self.driver:
            self.driver.quit()

    def wait_for_element(self, by, value, timeout=10):
        """–û–∂–∏–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞"""
        return WebDriverWait(self.driver, timeout).until(
            EC.presence_of_element_located((by, value))
        )

    def click_show_more_button(self):
        """–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë'"""
        try:
            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë"
            show_more_button = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, "a.btn-all-course"))
            )

            if show_more_button.is_displayed() and show_more_button.is_enabled():
                print("üîÑ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë'...")

                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–Ω–æ–ø–∫–µ
                self.driver.execute_script("arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});",
                                           show_more_button)
                time.sleep(2)

                # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –ø–æ–º–æ—â—å—é JavaScript (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
                self.driver.execute_script("arguments[0].click();", show_more_button)

                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                time.sleep(3)

                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                WebDriverWait(self.driver, 10).until(
                    EC.presence_of_element_located((By.CLASS_NAME, "oneelemcurse"))
                )

                print("‚úÖ –ù–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
                return True
            else:
                print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë' –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞")
                return False

        except TimeoutException:
            print("‚ùå –ö–Ω–æ–ø–∫–∞ '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë': {str(e)}")
            return False

    def get_all_course_cards(self, max_pages=3):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∫—É—Ä—Å–æ–≤ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
        all_cards = []
        current_page = 1

        print(f"üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å {max_pages} —Å—Ç—Ä–∞–Ω–∏—Ü...")

        while current_page <= max_pages:
            print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {current_page}:")

            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
            try:
                WebDriverWait(self.driver, 10).until(
                    EC.presence_of_element_located((By.CLASS_NAME, "oneelemcurse"))
                )
            except TimeoutException:
                print("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –∫—É—Ä—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                break

            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            current_cards = self.driver.find_elements(By.CSS_SELECTOR,
                                                      ".col-lg-6.col-md-6.d-flex.align-items-stretch.oneelemcurse")

            print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(current_cards)}")
            all_cards.extend(current_cards)

            # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é
            if current_page < max_pages:
                if not self.click_show_more_button():
                    print("üö´ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤")
                    break

            current_page += 1

        print(f"üìä –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(all_cards)}")
        return all_cards

    def parse_courses(self, limit=10, max_pages=2):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫—É—Ä—Å–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        try:
            self.driver.get("https://patriot.rcek.by/courses")
            all_courses_data = []
            processed_urls = set()

            print("üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫—É—Ä—Å–æ–≤...")

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —É—á–µ—Ç–æ–º –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            all_cards = self.get_all_course_cards(max_pages=max_pages)

            if not all_cards:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –∫—É—Ä—Å–æ–≤")
                return []

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
            if limit and len(all_cards) > limit:
                all_cards = all_cards[:limit]
                print(f"üéØ –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É {limit} –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏")

            print(f"üîç –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(all_cards)} –∫–∞—Ä—Ç–æ—á–µ–∫")

            for i, card in enumerate(all_cards, 1):
                try:
                    print(f"\nüìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É {i}/{len(all_cards)}")
                    course_data = self.parse_course_card(card, processed_urls)
                    if course_data:
                        all_courses_data.append(course_data)
                        print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ {i} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: {course_data['title'][:50]}...")
                    else:
                        print(f"‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ {i} –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–¥—É–±–ª–∏–∫–∞—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞)")

                except Exception as e:
                    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ä—Ç–æ—á–∫–∏ {i}: {str(e)}")
                    continue

            print(f"\nüéØ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±—Ä–∞–Ω–æ {len(all_courses_data)} –∏–∑ {len(all_cards)} –∫—É—Ä—Å–æ–≤")

            # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            if len(all_courses_data) < len(all_cards):
                print(f"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: {len(all_cards) - len(all_courses_data)} –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")

            return all_courses_data

        except Exception as e:
            print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {str(e)}")
            import traceback
            print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
            return []

    def parse_course_card(self, card, processed_urls):
        """–ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∫—É—Ä—Å–∞"""
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞, —Ç.–∫. —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–≥–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è
            try:
                title_element = card.find_element(By.CSS_SELECTOR, "h3 a")
                title = title_element.text.strip()
                course_url = title_element.get_attribute("href")
            except StaleElementReferenceException:
                print("   ‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç —É—Å—Ç–∞—Ä–µ–ª, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É")
                return None

            print(f"   üìñ –ù–∞–∑–≤–∞–Ω–∏–µ: {title[:30]}...")
            print(f"   üîó URL: {course_url}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–∞—Ä—Å–∏–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç–æ—Ç –∫—É—Ä—Å
            if course_url in processed_urls:
                print(f"   ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç: {course_url}")
                return None

            processed_urls.add(course_url)

            # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É
            try:
                date_element = card.find_element(By.CSS_SELECTOR, "h4")
                date_range = date_element.text.strip()
                print(f"   üìÖ –î–∞—Ç–∞: {date_range}")
            except NoSuchElementException:
                date_range = ""
                print(f"   üìÖ –î–∞—Ç–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            # –ü–∞—Ä—Å–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            try:
                img_element = card.find_element(By.CSS_SELECTOR, "img.img-fluid")
                image_url = img_element.get_attribute("src")
                print(f"   üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –Ω–∞–π–¥–µ–Ω–æ")
            except NoSuchElementException:
                image_url = ""
                print(f"   üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–ª–∞—à–∫–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
            is_completed = False
            try:
                completed_element = card.find_element(By.CSS_SELECTOR, ".endcoursetoday")
                if completed_element:
                    is_completed = True
                    print(f"   ‚úÖ –ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω")
            except NoSuchElementException:
                pass

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            print(f"   üîç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–µ—Ç–∞–ª–µ–π...")
            detail_data = self.parse_course_details(course_url)

            course_data = {
                'title': title,
                'date_range': date_range,
                'image_url': image_url,
                'is_completed': is_completed,
                'url': course_url,
                'description': detail_data.get('description', ''),
                'additional_info': detail_data.get('additional_info', ''),
                'organizers': detail_data.get('organizers', ''),
            }

            print(f"   ‚úÖ –î–µ—Ç–∞–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã")
            return course_data

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {str(e)}")
            import traceback
            print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: {traceback.format_exc()}")
            return None

    def parse_course_details(self, course_url):
        """–ü–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ - —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π –≤–∫–ª–∞–¥–æ–∫"""
        print(f"   üîç –ü–∞—Ä—Å–∏–º –¥–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞: {course_url}")

        detail_data = {
            'description': '',
            'additional_info': '',
            'organizers': ''
        }

        try:
            original_window = self.driver.current_window_handle
            self.driver.execute_script("window.open('');")
            self.driver.switch_to.window(self.driver.window_handles[-1])
            self.driver.get(course_url)

            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            time.sleep(5)

            # 1. –ü–∞—Ä—Å–∏–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            try:
                container_element = self.driver.find_element(By.CSS_SELECTOR, ".container.aos-init.aos-animate")
                detail_data['description'] = self.clean_text(container_element.text)
                print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {len(detail_data['description'])} —Å–∏–º–≤–æ–ª–æ–≤")
            except NoSuchElementException:
                try:
                    description_element = self.driver.find_element(By.CLASS_NAME, "conseption")
                    detail_data['description'] = self.clean_text(description_element.text)
                    print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ (conseption): {len(detail_data['description'])} —Å–∏–º–≤–æ–ª–æ–≤")
                except NoSuchElementException:
                    detail_data['description'] = ""
                    print("   üìù –û–ø–∏—Å–∞–Ω–∏–µ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            # 2. –ü–∞—Ä—Å–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π –≤–∫–ª–∞–¥–æ–∫
            additional_sections = []

            try:
                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–ª–æ–∫–∞ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
                courserowcust_element = WebDriverWait(self.driver, 10).until(
                    EC.presence_of_element_located((By.CLASS_NAME, "courserowcust"))
                )
                print("   ‚úÖ –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ courserowcust")

                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –±–ª–æ–∫—É –≤–∫–ª–∞–¥–æ–∫
                self.driver.execute_script("arguments[0].scrollIntoView(true);", courserowcust_element)
                time.sleep(2)

                # –ü—Ä–æ–±—É–µ–º –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–µ —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
                for i in range(1, 4):
                    try:
                        # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É –≤–∫–ª–∞–¥–∫–∏ –∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –Ω–µ–π
                        tab_link = self.driver.find_element(By.CSS_SELECTOR, f"a[href='#tab-{i}']")
                        self.driver.execute_script("arguments[0].click();", tab_link)
                        print(f"      üîÑ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ {i}")
                        time.sleep(2)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

                        # –¢–µ–ø–µ—Ä—å –ø–∞—Ä—Å–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
                        tab_content = self.driver.find_element(By.CSS_SELECTOR, f"#tab-{i} .details")
                        tab_text = self.clean_text(tab_content.text)

                        if tab_text and len(tab_text) > 10:
                            tab_names = ["üìç –ú–µ—Å—Ü–∞ –ø—Ä–∞–≤—è–¥–∑–µ–Ω–Ω—è", "üë• –£–¥–∑–µ–ª—å–Ω—ñ–∫—ñ", "üìû –ö–∞–Ω—Ç–∞–∫—Ç—ã"]
                            additional_sections.append(f"{tab_names[i - 1]}:\n{tab_text}")
                            print(f"      ‚úÖ –í–∫–ª–∞–¥–∫–∞ {i}: –Ω–∞–π–¥–µ–Ω–æ - {len(tab_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                        else:
                            print(f"      ‚ö†Ô∏è –í–∫–ª–∞–¥–∫–∞ {i}: —Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π")

                    except Exception as e:
                        print(f"      ‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª–∞–¥–∫–∏ {i}: {e}")

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∞ –≤–∫–ª–∞–¥–æ–∫: {e}")

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if additional_sections:
                detail_data['additional_info'] = '\n\n'.join(additional_sections)
                print(f"   üìä –î–æ–ø.–∏–Ω—Ñ–æ: {len(detail_data['additional_info'])} —Å–∏–º–≤–æ–ª–æ–≤")
            else:
                detail_data['additional_info'] = ""
                print("   üìä –î–æ–ø.–∏–Ω—Ñ–æ: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            # 3. –ü–∞—Ä—Å–∏–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
            organizers_list = []

            try:
                organizers_section = WebDriverWait(self.driver, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, ".row.partrow"))
                )
                print("   ‚úÖ –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ partrow")

                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –±–ª–æ–∫—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
                self.driver.execute_script("arguments[0].scrollIntoView(true);", organizers_section)
                time.sleep(2)

                # –ò—â–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å—Å—ã–ª–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
                org_blocks = organizers_section.find_elements(By.CSS_SELECTOR, ".col-lg-3")
                print(f"      –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤: {len(org_blocks)}")

                for block in org_blocks:
                    try:
                        # –ò—â–µ–º —Å—Å—ã–ª–∫—É –≤ –±–ª–æ–∫–µ
                        link = block.find_element(By.CSS_SELECTOR, "a")
                        org_name = self.clean_text(link.text)
                        org_url = link.get_attribute('href')

                        if org_name and len(org_name) > 2:
                            if org_url:
                                organizers_list.append(f"üè¢ {org_name} - {org_url}")
                            else:
                                organizers_list.append(f"üè¢ {org_name}")
                            print(f"      ‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {org_name}")

                    except NoSuchElementException:
                        continue

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤: {e}")

            if organizers_list:
                detail_data['organizers'] = '\n'.join(organizers_list)
                print(f"   üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã: –Ω–∞–π–¥–µ–Ω–æ {len(organizers_list)} –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤")
            else:
                detail_data['organizers'] = ""
                print("   üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
            self.driver.close()
            self.driver.switch_to.window(original_window)

            print(f"   ‚úÖ –î–µ—Ç–∞–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω—ã –¥–ª—è {course_url}")
            return detail_data

        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–µ—Ç–∞–ª–µ–π –∫—É—Ä—Å–∞ {course_url}: {str(e)}")
            try:
                if len(self.driver.window_handles) > 1:
                    self.driver.close()
                self.driver.switch_to.window(original_window)
            except:
                pass
            return detail_data

    def clean_text(self, text):
        """–û—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤"""
        if not text:
            return ""
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        lines = [line.strip() for line in text.split('\n') if line.strip()]
        return '\n'.join(lines)


def save_courses_to_db(courses_data):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    saved_count = 0

    print(f"üíæ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ {len(courses_data)} –∫—É—Ä—Å–æ–≤ –≤ –±–∞–∑—É...")

    for i, course_data in enumerate(courses_data, 1):
        try:
            print(f"üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É—Ä—Å {i}/{len(courses_data)}: {course_data['title'][:50]}...")

            # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å
            course, created = Course.objects.get_or_create(
                url=course_data['url'],
                defaults={
                    'title': course_data['title'],
                    'date_range': course_data['date_range'],
                    'image_url': course_data['image_url'],
                    'is_completed': course_data['is_completed'],
                    'description': course_data['description'],
                    'additional_info': course_data['additional_info'],
                    'organizers': course_data['organizers'],
                }
            )

            if created:
                saved_count += 1
                print(f"   ‚úÖ –ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω (ID: {course.id})")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—É—Ä—Å
                course.title = course_data['title']
                course.date_range = course_data['date_range']
                course.image_url = course_data['image_url']
                course.is_completed = course_data['is_completed']
                course.description = course_data['description']
                course.additional_info = course_data['additional_info']
                course.organizers = course_data['organizers']
                course.save()
                print(f"   üîÑ –ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω (ID: {course.id})")

        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ {course_data['title']}: {str(e)}")
            continue

    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {saved_count}/{len(courses_data)} –∫—É—Ä—Å–æ–≤")
    return saved_count